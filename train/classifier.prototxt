layer {
  name: "data"
  type: "ImageData"
  top: "data"
  top: "label"
  transform_param {
    mirror: true
    scale: 0.00392156862745
  }
  image_data_param {
    source: "images/classifier.txt"
    batch_size: 16
    shuffle: true
    new_height: 384
    new_width: 384
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 64
    kernel_size: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1"
  top: "conv2"
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv2"
  top: "pool1"
  pooling_param {
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool1"
  top: "conv3"
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv3"
  top: "pool2"
  pooling_param {
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "pool2"
  top: "conv4"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv4"
  top: "pool3"
  pooling_param {
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "pool3"
  top: "conv5"
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv5"
  top: "pool4"
  pooling_param {
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv6"
  type: "Convolution"
  bottom: "pool4"
  top: "conv6"
  convolution_param {
    num_output: 1024
    kernel_size: 3
    pad: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "conv6"
  top: "conv6"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv6"
  top: "pool5"
  pooling_param {
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv7"
  type: "Convolution"
  bottom: "pool5"
  top: "conv7"
  convolution_param {
    num_output: 1024
    kernel_size: 3
    pad: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "conv7"
  top: "conv7"
}
layer {
  name: "pool6"
  type: "Pooling"
  bottom: "conv7"
  top: "pool6"
  pooling_param {
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "drop1"
  type: "Dropout"
  bottom: "pool6"
  top: "pool6"
  dropout_param {
    dropout_ratio: 0.8
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool6"
  top: "ip1"
  inner_product_param {
    num_output: 447
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
  }
}
layer {
  name: "final"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "final"
}
